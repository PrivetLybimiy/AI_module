services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.frontend
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://backend:8000
    depends_on:
      - backend
    networks:
      - app-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.backend
      args:
        POSTGRES_USER: postgres 
        POSTGRES_PASSWORD: 01233210 
        POSTGRES_DB: AI_module
    volumes:
      - ./backend:/app
    environment:
      - DATABASE_URL=postgresql://postgres:01233210@db:5432/AI_module
      - DJANGO_SECRET_KEY=Zkkv7rnashVeruYHD9ks98H-nxUhMXWjXugbwi8Wgm33BH1ND9D8uPFJw0SS34FYpa8 
      - DJANGO_DEBUG=False
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8000:8000"
    networks:
      - app-network

  db:
    image: postgres:15
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=postgres 
      - POSTGRES_PASSWORD=01233210 
      - POSTGRES_DB=AI_module
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d AI_module"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge